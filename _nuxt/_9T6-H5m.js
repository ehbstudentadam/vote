var E=i=>{throw TypeError(i)};var C=(i,t,s)=>t.has(i)||E("Cannot "+s);var e=(i,t,s)=>(C(i,t,"read from private field"),s?s.call(i):t.get(i)),b=(i,t,s)=>t.has(i)?E("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(i):t.set(i,s),f=(i,t,s,r)=>(C(i,t,"write to private field"),r?r.call(i,s):t.set(i,s),s),y=(i,t,s)=>(C(i,t,"access private method"),s);import{az as R,aA as q,aB as S,aC as j,aD as D,aE as U,aF as I,aG as L,i as k,aH as z,aI as A,E as x,X as P,aJ as Q,aK as V,aL as B}from"./Dcd5bFKn.js";var c,l,o,a,u,g,M,K,F=(K=class extends R{constructor(t,s){super();b(this,u);b(this,c);b(this,l);b(this,o);b(this,a);f(this,c,t),this.setOptions(s),this.bindMethods(),y(this,u,g).call(this)}bindMethods(){this.mutate=this.mutate.bind(this),this.reset=this.reset.bind(this)}setOptions(t){var r;const s=this.options;this.options=e(this,c).defaultMutationOptions(t),q(this.options,s)||e(this,c).getMutationCache().notify({type:"observerOptionsUpdated",mutation:e(this,o),observer:this}),s!=null&&s.mutationKey&&this.options.mutationKey&&S(s.mutationKey)!==S(this.options.mutationKey)?this.reset():((r=e(this,o))==null?void 0:r.state.status)==="pending"&&e(this,o).setOptions(this.options)}onUnsubscribe(){var t;this.hasListeners()||(t=e(this,o))==null||t.removeObserver(this)}onMutationUpdate(t){y(this,u,g).call(this),y(this,u,M).call(this,t)}getCurrentResult(){return e(this,l)}reset(){var t;(t=e(this,o))==null||t.removeObserver(this),f(this,o,void 0),y(this,u,g).call(this),y(this,u,M).call(this)}mutate(t,s){var r;return f(this,a,s),(r=e(this,o))==null||r.removeObserver(this),f(this,o,e(this,c).getMutationCache().build(e(this,c),this.options)),e(this,o).addObserver(this),e(this,o).execute(t)}},c=new WeakMap,l=new WeakMap,o=new WeakMap,a=new WeakMap,u=new WeakSet,g=function(){var s;const t=((s=e(this,o))==null?void 0:s.state)??j();f(this,l,{...t,isPending:t.status==="pending",isSuccess:t.status==="success",isError:t.status==="error",isIdle:t.status==="idle",mutate:this.mutate,reset:this.reset})},M=function(t){D.batch(()=>{var s,r,d,h,m,v,w,O;if(e(this,a)&&this.hasListeners()){const n=e(this,l).variables,p=e(this,l).context;(t==null?void 0:t.type)==="success"?((r=(s=e(this,a)).onSuccess)==null||r.call(s,t.data,n,p),(h=(d=e(this,a)).onSettled)==null||h.call(d,t.data,null,n,p)):(t==null?void 0:t.type)==="error"&&((v=(m=e(this,a)).onError)==null||v.call(m,t.error,n,p),(O=(w=e(this,a)).onSettled)==null||O.call(w,void 0,t.error,n,p))}this.listeners.forEach(n=>{n(e(this,l))})})},K);function G(i=""){if(!U())throw new Error("vue-query hooks can only be used inside setup() function or functions that support injection context.");const t=L(i),s=I(t);if(!s)throw new Error("No 'queryClient' found in Vue context, use 'VueQueryPlugin' to properly initialize the library.");return s}function N(i,t){const s=G(),r=k(()=>s.defaultMutationOptions(B(i))),d=new F(s,r.value),h=z(d.getCurrentResult()),m=d.subscribe(n=>{A(h,n)}),v=(n,p)=>{d.mutate(n,p).catch(()=>{})};x(r,()=>{d.setOptions(r.value)}),P(()=>{m()});const O=Q(h);return x(()=>h.error,n=>{if(n&&V(r.value.throwOnError,[n]))throw n}),{...O,mutate:v,mutateAsync:h.mutate,reset:h.reset}}export{N as u};
